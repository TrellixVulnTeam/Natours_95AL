$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000000cc;

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
}
body {
  box-sizing: border-box;
  font-family: "lato", sans-serif;
  font-weight: 400;
  line-height: 1.6;
  color: $color-primary-dark;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 70%, 0 100%);
  /* you define the coordinates inside the parenthesis to crop try in the console*/
  /* https://bennettfeely.com/clippy/ */
  /* whatever the vp size the image stays on top of the container*/
  position: relative; /*to make the logo-box  position according to the header*/

  &__logo-box {
    //header__logo-box
    position: absolute;
    top: 5.5rem;
    left: 5rem;
  }
  &__logo {
    height: 3.5rem;
    backface-visibility: hidden;
    animation: moveInTop 1s ease-out;
  }
  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(
      -50%,
      -50%
    ); /* it's shiffted from it's own initial position*/
    text-align: center; /*to align text like the button which is a inline-block*/
  }
}

/* --------title---------- */
.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  margin-bottom: 7rem;
  &--main {
    display: block; /* Pour avoir un retour à la ligne */
    font-size: 6rem;
    font-weight: 4rem;
    letter-spacing: 3.5rem;
    margin-right: -3.5rem; /*to remove the extra space added after the text*/
    animation: moveInLeft 2s ease-in-out;
  }
  &--sub {
    display: block; /* Pour avoir un retour à la ligne */
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    margin-right: -1.75rem; /*to remove the extra space added after the text*/
    animation: moveInRight 1s ease-in-out;
  }
}

/* title animations */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
    /* X to animate in the right direction| 
    negative value means it goes to the left and postive means it goes to the right */
  }

  80% {
    transform: translateX(2.5rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0); /* value means means back to where it was */
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-2.5rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes moveInTop {
  0% {
    opacity: 0;
    transform: translateY(-5rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes moveInBottom {
  from {
    opacity: 0;
    transform: translateY(10rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.btn {
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    /* to avoid spreading out on elements around* always use when using height width or padding to an element*/
    /* also when using inline-block it's treated like text so you can use text-align on the parent element to center it */
    border-radius: 10rem;
    transition: all 0.2s;
    position: relative;
    font-weight: 700;
    font-size: 1.4rem;
  }

  &--animated {
    animation: moveInBottom 1s ease-out 0.75s;
    animation-fill-mode: backwards;
    /* the animation styles will be applied before the animation starts here the button was displayed before the animation actually started */
  }
  &:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem $color-black;
    /* offstet x direction, offset y direction , blur, color */

    &::after {
      /*appears after, only when button is on hover state*/
      transform: scaleX(1.5) scaleY(1.4);
      opacity: 0;
    }
  }
  &:active {
    box-shadow: 0 0.5rem 1rem $color-black;
    transform: translateY(-1px); /*goes down when it's clicked*/
  }
  &--white {
    background-color: $color-white;
    color: $color-grey-dark;
    &::after {
      background-color: $color-white;
      //this code is actually useless
    }
  }
  /*----- spreading effect------- */
  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    /* everything  has to be exactly the same as the initial button */
    position: absolute; /*initial btn is positionned relative */
    top: 0;
    left: 0;
    z-index: -1;
    background-color: $color-white;
    transition: all 0.4s;
  }
}
