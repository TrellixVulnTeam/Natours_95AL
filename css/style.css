/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
:root {
  --light-green: #7ed56f;
  --light-green-transparent: #80d671cc;
  --medium-green: #55c57a;
  --dark-green: #55c57a;
  --dark-green-transparent: #54c47acc;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 62.5%;
  line-height: 1.6rem;
}
body {
  font-family: "lato", sans-serif;
  font-weight: 400;
  line-height: 1.6;
  color: #777;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      var(--light-green-transparent),
      var(--dark-green-transparent)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 70%, 0 100%);
  /* you define the coordinates inside the parenthesis to crop try in the console*/
  /* https://bennettfeely.com/clippy/ */
  /* whatever the vp size the image stays on top of the container*/
  position: relative; /*to make the logo-box  position according to the header*/
}

.logo-box {
  position: absolute;
  top: 5.5rem;
  left: 5rem;
}

.logo {
  height: 3.5rem;
  backface-visibility: hidden;
  animation: moveInTop 1s ease-out;
}

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(
    -50%,
    -50%
  ); /* it's shiffted from it's own initial position*/
  text-align: center; /*to align text like the button which is a inline-block*/
}

/* --------title---------- */
.heading-primary {
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 7rem;
}
.heading-primary-main {
  display: block; /* Pour avoir un retour à la ligne */
  font-size: 6rem;
  font-weight: 4rem;
  letter-spacing: 3.5rem;
  margin-right: -3.5rem; /*to remove the extra space added after the text*/
  animation: moveInLeft 2s ease-in-out;
}
.heading-primary-sub {
  display: block; /* Pour avoir un retour à la ligne */
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.7rem;
  margin-right: -1.7rem; /*to remove the extra space added after the text*/
  animation: moveInRight 1s ease-in-out;
}
/* title animations */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
    /* X to animate in the right direction| 
    negative value means it goes to the left and postive means it goes to the right */
  }

  80% {
    transform: translateX(2.5rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0); /* value means means back to where it was */
  }
}
@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-2.5rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
@keyframes moveInTop {
  0% {
    opacity: 0;
    transform: translateY(-5rem);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes moveInBottom {
  from {
    opacity: 0;
    transform: translateY(10rem);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  /* to avoid spreading out on elements around* always use when using height width or padding to an element*/
  /* also when using inline-block it's treated like text so you can use text-align on the parent element to center it */
  border-radius: 10rem;
  transition: all 0.2s;
  position: relative;
  font-weight: 700;
  font-size: 1.4rem;
}

.btn-animated {
  animation: moveInBottom 1s ease-out 0.75s;
  animation-fill-mode: backwards;
  /* the animation styles will be applied before the animation starts here the button was displayed before the animation actually started */
}
.btn:hover {
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);
  /* offstet x direction, offset y direction , blur, color */
}
.btn:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  transform: translateY(-1px); /*goes down when it's clicked*/
}
.btn-white {
  background-color: #fff;
  color: #777;
}

/*----- spreading effect------- */
.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  /* everything  has to be exactly the same as the initial button */
  position: absolute; /*initial btn is positionned relative */
  top: 0;
  left: 0;
  z-index: -1;
  background-color: #fff;
  transition: all 0.4s;
}
/* .btn-white::after {
  background-color: #fff;
} */
.btn:hover::after {
  /*appears after, only when button is on hover state*/
  transform: scaleX(1.5) scaleY(1.4);
  opacity: 0;
}
